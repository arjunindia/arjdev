"use strict";/*! 
//
//	PixelWave.js
// 	Pixel Wave Animation for seamless page transitions 
// 	Version 0.1 04/12/17
// 	Created by Vinzenz Aubry for sansho (04/12/17)
// 	@license MIT Licensed
//
*/
function PixelWave(t){this.animationSettings={xSize:t.xSize||48,ySize:t.ySize||48,steps:t.steps||[.1,.1,.3,.5,.5,1],color:t.color||"#305EFF",zIndex:t.zIndex||99999,speedIn:t.speedIn||.7,speedOut:t.speedOut||.7,canvasTop:t.canvasTop||0,canvasLeft:t.canvasLeft||0,autoCalculateSquaresSize:t.autoCalculateSquaresSize||!1,delayMiddle:t.delayMiddle||0},this.size={scaleRatio:window.devicePixelRatio||1,w:0,h:0},this.calculatedSettings={currentDistance:0,lastDraw:0,blockRun:!1,ending:!1},this.addCanvas(),this.eventListeners(),this.resizeCanvas()}PixelWave.prototype.addCanvas=function(){var t=document.createElement("canvas");t.id="pixelWave",t.style.zIndex=this.animationSettings.zIndex,t.style.pointerEvents="none",t.style.display="block",t.style.position="fixed",t.style.top=this.animationSettings.canvasTop+"px",t.style.left=this.animationSettings.canvasLeft+"px",document.body.appendChild(t),this.canvas=t,this.ctx=this.canvas.getContext("2d")},PixelWave.prototype.calculateSettings=function(){this.calculatedSettings.coloumns=Math.ceil(this.size.w/this.animationSettings.xSize),this.calculatedSettings.rows=Math.ceil(this.size.h/this.animationSettings.ySize);var t=this.calculatedSettings.rows;this.calculatedSettings.rowArray=Array.apply(null,{length:t}).map(Number.call,Number)},PixelWave.prototype.start=function(t,i,e){if(!this.calculateSettings.blockRun){this.calculateSettings.blockRun=!0,t&&t(),this.resizeCanvas(),this.calculateSquaresSize(),this.calculateSettings(),this.calculatedSettings.currentDistance=0,this.calculatedSettings.lastDraw=0;var s=this.calculatedSettings.coloumns+this.animationSettings.steps.length;s=s.toString();var n=this;this.animation=TweenLite.to(this.calculatedSettings,this.animationSettings.speedIn,{currentDistance:"+="+s,onUpdate:this.updateHandlerRunIn,onUpdateParams:[n,!0],onComplete:this.completeHandlerStart,onCompleteParams:[n,i,e],ease:Power0.easeNone})}},PixelWave.prototype.end=function(t){this.calculatedSettings.currentDistance=0,this.calculatedSettings.lastDraw=0,this.calculatedSettings.ending=!0;var i=this.calculatedSettings.coloumns+this.animationSettings.steps.length;i=i.toString();var e=this;this.animation=TweenLite.to(this.calculatedSettings,this.animationSettings.speedOut,{currentDistance:"+="+i,onUpdate:this.updateHandlerRunIn,onUpdateParams:[e,!1],onComplete:this.completeHandlerEnd,onCompleteParams:[e,t],ease:Power0.easeNone})},PixelWave.prototype.updateHandlerRunIn=function(t,i){var e=Math.round(t.calculatedSettings.currentDistance);e>t.calculatedSettings.lastDraw&&(t.calculatedSettings.lastDraw=e,t.spawnPixels(e,i))},PixelWave.prototype.completeHandlerStart=function(t,i,e){i&&i(),setTimeout(function(){t.end(e)},1e3*t.animationSettings.delayMiddle)},PixelWave.prototype.completeHandlerEnd=function(t,i){i&&i(),t.calculateSettings.blockRun=!1,t.calculatedSettings.ending=!1},PixelWave.prototype.spawnPixels=function(t,i){this.ctx.fillStyle=this.animationSettings.color;for(var e=0;e<this.animationSettings.steps.length;e++){this.calculatedSettings.rowArray=this.shuffleArray(this.calculatedSettings.rowArray);for(var s=Math.ceil(this.animationSettings.steps[e]*this.calculatedSettings.rows),n=this.calculatedSettings.rowArray.slice(0,s),a=0;a<n.length;a++){var o=(t-e)*this.animationSettings.xSize,l=n[a]*this.animationSettings.ySize;i?this.ctx.fillRect(o,l,this.animationSettings.xSize,this.animationSettings.ySize):this.ctx.clearRect(o,l,this.animationSettings.xSize,this.animationSettings.ySize)}}var c=(t-(this.animationSettings.steps.length-1))*this.animationSettings.xSize;i?this.ctx.fillRect(0,0,c,this.size.h):this.ctx.clearRect(0,0,c,this.size.h)},PixelWave.prototype.setPixelWavePosition=function(t,i){this.animationSettings.canvasTop=i,this.animationSettings.canvasLeft=t,this.canvas.style.top=this.animationSettings.canvasTop+"px",this.canvas.style.left=this.animationSettings.canvasLeft+"px"},PixelWave.prototype.calculateSquaresSize=function(){this.animationSettings.autoCalculateSquaresSize&&(this.size.w>=1600?(this.animationSettings.xSize=48,this.animationSettings.ySize=48):this.size.w>=1200?(this.animationSettings.xSize=42,this.animationSettings.ySize=42):this.size.w>=960?(this.animationSettings.xSize=36,this.animationSettings.ySize=36):(this.animationSettings.xSize=30,this.animationSettings.ySize=30))},PixelWave.prototype.eventListeners=function(){this.resize=this.resizeFunctions.bind(this),window.addEventListener("resize",this.resize),this.debounceF=this.debounce(function(){console.log("debounce function got called"),this.resizeCanvas(),this.calculateSquaresSize(),this.calculateSettings(),this.animation&&(this._progress=this.animation.progress()),this.animation.kill(),console.log(this.calculatedSettings.ending),this.calculatedSettings.ending?(console.log("started End"),this.end(),this.animation.seek(this._progress*this.animationSettings.speedOut)):(this.calculatedSettings.blockRun=!1,this.start(),this.animation.seek(this._progress*this.animationSettings.speedIn),console.log("started Start")),console.log(this._progress),this.calculatedSettings.ending&&this.fill(),this.animation.play(),console.log("animation got restarted")},250)},PixelWave.prototype.resizeFunctions=function(){this.calculateSettings.blockRun&&(this.animation.pause(),this.debounceF())},PixelWave.prototype.debounce=function(t,i,e){var s;return function(){var n=this,a=arguments,o=function i(){s=null,e||t.apply(n,a)},l=e&&!s;clearTimeout(s),s=setTimeout(o,i),l&&t.apply(n,a)}},PixelWave.prototype.fill=function(){this.calculateSettings.blockRun&&(this.ctx.fillStyle=this.animationSettings.color,this.ctx.fillRect(0,0,this.size.w,this.size.h),console.log(this.size.w))},PixelWave.prototype.resizeCanvas=function(){this.size.w=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,this.size.h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,this.canvas.width=this.size.w*this.size.scaleRatio,this.canvas.height=this.size.h*this.size.scaleRatio,this.canvas.style.width=this.size.w+"px",this.canvas.style.height=this.size.h+"px",this.ctx.scale(this.size.scaleRatio,this.size.scaleRatio)},PixelWave.prototype.shuffleArray=function(t){for(var i=t.length,e,s;0!==i;)s=Math.floor(Math.random()*i),i-=1,e=t[i],t[i]=t[s],t[s]=e;return t};